        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "assert.h"
        -:    2:#include "dominion.h"
        -:    3:#include <stdio.h>
        -:    4:#include "rngs.h"
        -:    5:#include <stdlib.h>
        -:    6:
        -:    7://Test Smithy
        -:    8://Reference & Citation testBuyCard.c ws used for info on how to set up a game for test
        -:    9://NOTE: My Smithy has a bug from assignment 2, it returns -1 instead of 0
        -:   10:int main(int argc, char ** argv){
        1:   11:    printf("Card Test 1: Smithy: Beginning\n");
        -:   12:    
        -:   13:    struct gameState G;
        -:   14:    int i, n, r, p, deckCount, discardCount, handCount;
        1:   15:    int testGame, randInt = 0;
        -:   16:    
        1:   17:    int k[10] = {adventurer, council_room, feast, gardens, mine,
        -:   18:        remodel, smithy, village, baron, great_hall};
        -:   19:    
        1:   20:    randInt = rand() % 10;
        -:   21:    //Creating a test game
        1:   22:    testGame = initializeGame(2, k, randInt, &G);
        2:   23:    assert(testGame == 0);
        -:   24:    
        -:   25:    //variables for testing
        1:   26:    int smithyResult = 2; //set at any number besides -1 or 0
        1:   27:    int currentPlayer = 0;
        1:   28:    int handPos = 4;
        -:   29:    
        1:   30:    smithyResult = cardSmithy(currentPlayer, &G, handPos);
        1:   31:    if (smithyResult == -1) {
        1:   32:        printf("Card Test 1: Smithy: -1 Returned, Test Failed\n");
        1:   33:    }
        1:   34:    if (smithyResult == 0)
        -:   35:    {
    #####:   36:        printf("Card Test 1: Smithy: 0 Returned, Test Passed\n");
    #####:   37:    }
        -:   38:    
        -:   39:    
        1:   40:    printf("Card Test 1: Smithy: Ended\n");
        1:   41:    return 0;
        -:   42:}
        -:   43:

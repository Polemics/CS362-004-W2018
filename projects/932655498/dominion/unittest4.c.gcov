        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:#include "assert.h"
        -:    3:#include "dominion.h"
        -:    4:#include <stdio.h>
        -:    5:#include "rngs.h"
        -:    6:#include <stdlib.h>
        -:    7:
        -:    8://Test buyCard(...)
        -:    9://Reference & Citation testBuyCard.c ws used for info on how to set up a game for test
        -:   10://Note my buyCard is different than the given testBuyCard
        -:   11:int main(int argc, char ** argv){
        1:   12:    printf("Unit Test 4: Beginning\n");
        -:   13:    
        -:   14:    struct gameState G;
        -:   15:    int i, n, r, p, deckCount, discardCount, handCount;
        1:   16:    int testGame, randInt = 0;
        -:   17:    
        1:   18:    int k[10] = {adventurer, council_room, feast, gardens, mine,
        -:   19:        remodel, smithy, village, baron, great_hall};
        -:   20:    
        1:   21:    randInt = rand() % 10;
        -:   22:    //Creating a test game
        1:   23:    testGame = initializeGame(2, k, randInt, &G);
        2:   24:    assert(testGame == 0);
        -:   25:    
        1:   26:    G.coins = 10;
        1:   27:    G.numBuys = 0;
        1:   28:    int didBuyResult = 0;
        -:   29:    
        -:   30:    //test number of buys returns -1 if user have no buys
        1:   31:    G.numBuys = 0;
        1:   32:    didBuyResult = buyCard(2,&G);
        2:   33:    assert(didBuyResult == -1);
        1:   34:    printf("Unit Test 4: Passed check to see if user has > 0 numBuys\n");
        -:   35:    
        -:   36:    //test successfull buy
        1:   37:    G.numBuys = 1;
        1:   38:    didBuyResult = -1;
        1:   39:    didBuyResult = buyCard(2,&G);
        2:   40:    assert(didBuyResult == 0);
        1:   41:    printf("Unit Test 4: Passed check to buyCard(...)\n");
        -:   42:    
        1:   43:    printf("Unit Test 4: Ended With Success\n");
        -:   44:    
        1:   45:    return 0;
        -:   46:}
